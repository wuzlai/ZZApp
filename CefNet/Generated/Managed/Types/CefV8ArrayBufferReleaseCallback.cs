// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_v8array_buffer_release_callback_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;
using CefNet.CApi;
using CefNet.Internal;

namespace CefNet
{
	/// <summary>
	/// Callback structure that is passed to cef_v8value_t::CreateArrayBuffer.
	/// </summary>
	/// <remarks>
	/// Role: Handler
	/// </remarks>
	public unsafe partial class CefV8ArrayBufferReleaseCallback : CefBaseRefCounted<cef_v8array_buffer_release_callback_t>, ICefV8ArrayBufferReleaseCallbackPrivate
	{
		private static readonly ReleaseBufferDelegate fnReleaseBuffer = ReleaseBufferImpl;

		internal static unsafe CefV8ArrayBufferReleaseCallback Create(IntPtr instance)
		{
			return new CefV8ArrayBufferReleaseCallback((cef_v8array_buffer_release_callback_t*)instance);
		}

		public CefV8ArrayBufferReleaseCallback()
		{
			cef_v8array_buffer_release_callback_t* self = this.NativeInstance;
			self->release_buffer = (void*)Marshal.GetFunctionPointerForDelegate(fnReleaseBuffer);
		}

		public CefV8ArrayBufferReleaseCallback(cef_v8array_buffer_release_callback_t* instance)
			: base((cef_base_ref_counted_t*)instance)
		{
		}

		[MethodImpl(MethodImplOptions.ForwardRef)]
		extern bool ICefV8ArrayBufferReleaseCallbackPrivate.AvoidReleaseBuffer();

		/// <summary>
		/// Called to release |buffer| when the ArrayBuffer JS object is garbage
		/// collected. |buffer| is the value that was passed to CreateArrayBuffer along
		/// with this object.
		/// </summary>
		protected internal unsafe virtual void ReleaseBuffer(IntPtr buffer)
		{
		}

		[UnmanagedFunctionPointer(CallingConvention.Winapi)]
		private unsafe delegate void ReleaseBufferDelegate(cef_v8array_buffer_release_callback_t* self, void* buffer);

		// void (*)(_cef_v8array_buffer_release_callback_t* self, void* buffer)*
		private static unsafe void ReleaseBufferImpl(cef_v8array_buffer_release_callback_t* self, void* buffer)
		{
			var instance = GetInstance((IntPtr)self) as CefV8ArrayBufferReleaseCallback;
			if (instance == null || ((ICefV8ArrayBufferReleaseCallbackPrivate)instance).AvoidReleaseBuffer())
			{
				return;
			}
			instance.ReleaseBuffer(unchecked((IntPtr)buffer));
		}
	}
}
