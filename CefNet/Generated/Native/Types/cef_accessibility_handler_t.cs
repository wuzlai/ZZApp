// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_accessibility_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;

namespace CefNet.CApi
{
	/// <summary>
	/// Implement this structure to receive accessibility notification when
	/// accessibility events have been registered. The functions of this structure
	/// will be called on the UI thread.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public unsafe partial struct cef_accessibility_handler_t
	{
		/// <summary>
		/// Base structure.
		/// </summary>
		public cef_base_ref_counted_t @base;

		/// <summary>
		/// void (*)(_cef_accessibility_handler_t* self, _cef_value_t* value)*
		/// </summary>
		public void* on_accessibility_tree_change;

		/// <summary>
		/// Called after renderer process sends accessibility tree changes to the
		/// browser process.
		/// </summary>
		[MethodImpl(MethodImplOptions.ForwardRef)]
		[NativeName("on_accessibility_tree_change")]
		public unsafe extern void OnAccessibilityTreeChange(cef_value_t* value);

		/// <summary>
		/// void (*)(_cef_accessibility_handler_t* self, _cef_value_t* value)*
		/// </summary>
		public void* on_accessibility_location_change;

		/// <summary>
		/// Called after renderer process sends accessibility location changes to the
		/// browser process.
		/// </summary>
		[MethodImpl(MethodImplOptions.ForwardRef)]
		[NativeName("on_accessibility_location_change")]
		public unsafe extern void OnAccessibilityLocationChange(cef_value_t* value);
	}
}

