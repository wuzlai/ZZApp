// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_media_router_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_media_observer_t
	{
		// void (*)(_cef_media_observer_t* self, size_t sinksCount, const _cef_media_sink_t** sinks)*
		.method public hidebysig void OnSinks(native uint sinksCount, valuetype CefNet.CApi.cef_media_sink_t** sinks)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_observer_t::on_sinks
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_media_observer_t*, native uint, valuetype CefNet.CApi.cef_media_sink_t**)
			ret
		}

		// void (*)(_cef_media_observer_t* self, size_t routesCount, const _cef_media_route_t** routes)*
		.method public hidebysig void OnRoutes(native uint routesCount, valuetype CefNet.CApi.cef_media_route_t** routes)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_observer_t::on_routes
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_media_observer_t*, native uint, valuetype CefNet.CApi.cef_media_route_t**)
			ret
		}

		// void (*)(_cef_media_observer_t* self, _cef_media_route_t* route, cef_media_route_connection_state_t state)*
		.method public hidebysig void OnRouteStateChanged(valuetype CefNet.CApi.cef_media_route_t* route, valuetype CefNet.CefMediaRouteConnectionState state)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_observer_t::on_route_state_changed
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_media_observer_t*, valuetype CefNet.CApi.cef_media_route_t*, valuetype CefNet.CefMediaRouteConnectionState)
			ret
		}

		// void (*)(_cef_media_observer_t* self, _cef_media_route_t* route, const void* message, size_t message_size)*
		.method public hidebysig void OnRouteMessageReceived(valuetype CefNet.CApi.cef_media_route_t* route, void* message, native uint message_size)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_observer_t::on_route_message_received
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_media_observer_t*, valuetype CefNet.CApi.cef_media_route_t*, void*, native uint)
			ret
		}
	}
}

