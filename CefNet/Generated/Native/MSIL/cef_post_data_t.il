// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_request_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_post_data_t
	{
		// int (*)(_cef_post_data_t* self)*
		.method public hidebysig int32 IsReadOnly()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_t::is_read_only
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_post_data_t*)
			ret
		}

		// int (*)(_cef_post_data_t* self)*
		.method public hidebysig int32 HasExcludedElements()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_t::has_excluded_elements
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_post_data_t*)
			ret
		}

		// size_t (*)(_cef_post_data_t* self)*
		.method public hidebysig native uint GetElementCount()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_t::get_element_count
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				native uint(valuetype CefNet.CApi.cef_post_data_t*)
			ret
		}

		// void (*)(_cef_post_data_t* self, size_t* elementsCount, _cef_post_data_element_t** elements)*
		.method public hidebysig void GetElements(native uint* elementsCount, valuetype CefNet.CApi.cef_post_data_element_t** elements)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_t::get_elements
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_post_data_t*, native uint*, valuetype CefNet.CApi.cef_post_data_element_t**)
			ret
		}

		// int (*)(_cef_post_data_t* self, _cef_post_data_element_t* element)*
		.method public hidebysig int32 RemoveElement(valuetype CefNet.CApi.cef_post_data_element_t* element)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_t::remove_element
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_post_data_t*, valuetype CefNet.CApi.cef_post_data_element_t*)
			ret
		}

		// int (*)(_cef_post_data_t* self, _cef_post_data_element_t* element)*
		.method public hidebysig int32 AddElement(valuetype CefNet.CApi.cef_post_data_element_t* element)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_t::add_element
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_post_data_t*, valuetype CefNet.CApi.cef_post_data_element_t*)
			ret
		}

		// void (*)(_cef_post_data_t* self)*
		.method public hidebysig void RemoveElements()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_t::remove_elements
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_post_data_t*)
			ret
		}
	}
}

