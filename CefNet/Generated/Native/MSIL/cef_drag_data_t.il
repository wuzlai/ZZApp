// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_drag_data_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_drag_data_t
	{
		// _cef_drag_data_t* (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_drag_data_t* Clone()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::clone
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_drag_data_t*(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// int (*)(_cef_drag_data_t* self)*
		.method public hidebysig int32 IsReadOnly()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::is_read_only
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// int (*)(_cef_drag_data_t* self)*
		.method public hidebysig int32 IsLink()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::is_link
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// int (*)(_cef_drag_data_t* self)*
		.method public hidebysig int32 IsFragment()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::is_fragment
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// int (*)(_cef_drag_data_t* self)*
		.method public hidebysig int32 IsFile()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::is_file
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetLinkUrl()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_link_url
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetLinkTitle()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_link_title
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetLinkMetadata()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_link_metadata
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetFragmentText()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_fragment_text
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetFragmentHtml()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_fragment_html
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetFragmentBaseUrl()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_fragment_base_url
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetFileName()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_file_name
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// size_t (*)(_cef_drag_data_t* self, _cef_stream_writer_t* writer)*
		.method public hidebysig native uint GetFileContents(valuetype CefNet.CApi.cef_stream_writer_t* writer)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_file_contents
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				native uint(valuetype CefNet.CApi.cef_drag_data_t*, valuetype CefNet.CApi.cef_stream_writer_t*)
			ret
		}

		// int (*)(_cef_drag_data_t* self, cef_string_list_t names)*
		.method public hidebysig int32 GetFileNames(valuetype CefNet.CApi.cef_string_list_t names)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_file_names
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_drag_data_t*, valuetype CefNet.CApi.cef_string_list_t)
			ret
		}

		// void (*)(_cef_drag_data_t* self, const cef_string_t* url)*
		.method public hidebysig void SetLinkUrl(valuetype CefNet.CApi.cef_string_t* url)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::set_link_url
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_drag_data_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_drag_data_t* self, const cef_string_t* title)*
		.method public hidebysig void SetLinkTitle(valuetype CefNet.CApi.cef_string_t* title)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::set_link_title
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_drag_data_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_drag_data_t* self, const cef_string_t* data)*
		.method public hidebysig void SetLinkMetadata(valuetype CefNet.CApi.cef_string_t* data)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::set_link_metadata
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_drag_data_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_drag_data_t* self, const cef_string_t* text)*
		.method public hidebysig void SetFragmentText(valuetype CefNet.CApi.cef_string_t* text)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::set_fragment_text
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_drag_data_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_drag_data_t* self, const cef_string_t* html)*
		.method public hidebysig void SetFragmentHtml(valuetype CefNet.CApi.cef_string_t* html)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::set_fragment_html
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_drag_data_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_drag_data_t* self, const cef_string_t* base_url)*
		.method public hidebysig void SetFragmentBaseUrl(valuetype CefNet.CApi.cef_string_t* base_url)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::set_fragment_base_url
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_drag_data_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_drag_data_t* self)*
		.method public hidebysig void ResetFileContents()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::reset_file_contents
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// void (*)(_cef_drag_data_t* self, const cef_string_t* path, const cef_string_t* display_name)*
		.method public hidebysig void AddFile(valuetype CefNet.CApi.cef_string_t* path, valuetype CefNet.CApi.cef_string_t* display_name)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::add_file
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_drag_data_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// _cef_image_t* (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_image_t* GetImage()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_image
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_image_t*(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// cef_point_t (*)(_cef_drag_data_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_point_t GetImageHotspot()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::get_image_hotspot
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_point_t(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}

		// int (*)(_cef_drag_data_t* self)*
		.method public hidebysig int32 HasImage()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_drag_data_t::has_image
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_drag_data_t*)
			ret
		}
	}
}

