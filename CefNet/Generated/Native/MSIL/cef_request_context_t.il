// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_request_context_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_request_context_t
	{
		// int (*)(_cef_request_context_t* self, _cef_request_context_t* other)*
		.method public hidebysig int32 IsSame(valuetype CefNet.CApi.cef_request_context_t* other)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::is_same
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_request_context_t*)
			ret
		}

		// int (*)(_cef_request_context_t* self, _cef_request_context_t* other)*
		.method public hidebysig int32 IsSharingWith(valuetype CefNet.CApi.cef_request_context_t* other)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::is_sharing_with
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_request_context_t*)
			ret
		}

		// int (*)(_cef_request_context_t* self)*
		.method public hidebysig int32 IsGlobal()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::is_global
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*)
			ret
		}

		// _cef_request_context_handler_t* (*)(_cef_request_context_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_request_context_handler_t* GetHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::get_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_request_context_handler_t*(valuetype CefNet.CApi.cef_request_context_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_request_context_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetCachePath()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::get_cache_path
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_request_context_t*)
			ret
		}

		// _cef_cookie_manager_t* (*)(_cef_request_context_t* self, _cef_completion_callback_t* callback)*
		.method public hidebysig valuetype CefNet.CApi.cef_cookie_manager_t* GetCookieManager(valuetype CefNet.CApi.cef_completion_callback_t* callback)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::get_cookie_manager
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_cookie_manager_t*(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_completion_callback_t*)
			ret
		}

		// int (*)(_cef_request_context_t* self, const cef_string_t* scheme_name, const cef_string_t* domain_name, _cef_scheme_handler_factory_t* factory)*
		.method public hidebysig int32 RegisterSchemeHandlerFactory(valuetype CefNet.CApi.cef_string_t* scheme_name, valuetype CefNet.CApi.cef_string_t* domain_name, valuetype CefNet.CApi.cef_scheme_handler_factory_t* factory)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::register_scheme_handler_factory
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_scheme_handler_factory_t*)
			ret
		}

		// int (*)(_cef_request_context_t* self)*
		.method public hidebysig int32 ClearSchemeHandlerFactories()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::clear_scheme_handler_factories
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*)
			ret
		}

		// void (*)(_cef_request_context_t* self, int reload_pages)*
		.method public hidebysig void PurgePluginListCache(int32 reload_pages)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::purge_plugin_list_cache
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_request_context_t*, int32)
			ret
		}

		// int (*)(_cef_request_context_t* self, const cef_string_t* name)*
		.method public hidebysig int32 HasPreference(valuetype CefNet.CApi.cef_string_t* name)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::has_preference
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// _cef_value_t* (*)(_cef_request_context_t* self, const cef_string_t* name)*
		.method public hidebysig valuetype CefNet.CApi.cef_value_t* GetPreference(valuetype CefNet.CApi.cef_string_t* name)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::get_preference
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_value_t*(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// _cef_dictionary_value_t* (*)(_cef_request_context_t* self, int include_defaults)*
		.method public hidebysig valuetype CefNet.CApi.cef_dictionary_value_t* GetAllPreferences(int32 include_defaults)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::get_all_preferences
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_dictionary_value_t*(valuetype CefNet.CApi.cef_request_context_t*, int32)
			ret
		}

		// int (*)(_cef_request_context_t* self, const cef_string_t* name)*
		.method public hidebysig int32 CanSetPreference(valuetype CefNet.CApi.cef_string_t* name)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::can_set_preference
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_request_context_t* self, const cef_string_t* name, _cef_value_t* value, cef_string_t* error)*
		.method public hidebysig int32 SetPreference(valuetype CefNet.CApi.cef_string_t* name, valuetype CefNet.CApi.cef_value_t* 'value', valuetype CefNet.CApi.cef_string_t* 'error')
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::set_preference
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_value_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_request_context_t* self, _cef_completion_callback_t* callback)*
		.method public hidebysig void ClearCertificateExceptions(valuetype CefNet.CApi.cef_completion_callback_t* callback)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::clear_certificate_exceptions
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_completion_callback_t*)
			ret
		}

		// void (*)(_cef_request_context_t* self, _cef_completion_callback_t* callback)*
		.method public hidebysig void ClearHttpAuthCredentials(valuetype CefNet.CApi.cef_completion_callback_t* callback)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::clear_http_auth_credentials
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_completion_callback_t*)
			ret
		}

		// void (*)(_cef_request_context_t* self, _cef_completion_callback_t* callback)*
		.method public hidebysig void CloseAllConnections(valuetype CefNet.CApi.cef_completion_callback_t* callback)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::close_all_connections
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_completion_callback_t*)
			ret
		}

		// void (*)(_cef_request_context_t* self, const cef_string_t* origin, _cef_resolve_callback_t* callback)*
		.method public hidebysig void ResolveHost(valuetype CefNet.CApi.cef_string_t* origin, valuetype CefNet.CApi.cef_resolve_callback_t* callback)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::resolve_host
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_resolve_callback_t*)
			ret
		}

		// void (*)(_cef_request_context_t* self, const cef_string_t* root_directory, _cef_dictionary_value_t* manifest, _cef_extension_handler_t* handler)*
		.method public hidebysig void LoadExtension(valuetype CefNet.CApi.cef_string_t* root_directory, valuetype CefNet.CApi.cef_dictionary_value_t* manifest, valuetype CefNet.CApi.cef_extension_handler_t* 'handler')
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::load_extension
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_dictionary_value_t*, valuetype CefNet.CApi.cef_extension_handler_t*)
			ret
		}

		// int (*)(_cef_request_context_t* self, const cef_string_t* extension_id)*
		.method public hidebysig int32 DidLoadExtension(valuetype CefNet.CApi.cef_string_t* extension_id)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::did_load_extension
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_request_context_t* self, const cef_string_t* extension_id)*
		.method public hidebysig int32 HasExtension(valuetype CefNet.CApi.cef_string_t* extension_id)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::has_extension
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_request_context_t* self, cef_string_list_t extension_ids)*
		.method public hidebysig int32 GetExtensions(valuetype CefNet.CApi.cef_string_list_t extension_ids)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::get_extensions
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_list_t)
			ret
		}

		// _cef_extension_t* (*)(_cef_request_context_t* self, const cef_string_t* extension_id)*
		.method public hidebysig valuetype CefNet.CApi.cef_extension_t* GetExtension(valuetype CefNet.CApi.cef_string_t* extension_id)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::get_extension
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_extension_t*(valuetype CefNet.CApi.cef_request_context_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// _cef_media_router_t* (*)(_cef_request_context_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_media_router_t* GetMediaRouter()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_request_context_t::get_media_router
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_media_router_t*(valuetype CefNet.CApi.cef_request_context_t*)
			ret
		}
	}
}

