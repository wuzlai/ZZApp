// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_context_menu_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_context_menu_handler_t
	{
		// void (*)(_cef_context_menu_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame, _cef_context_menu_params_t* params, _cef_menu_model_t* model)*
		.method public hidebysig void OnBeforeContextMenu(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CApi.cef_context_menu_params_t* @params, valuetype CefNet.CApi.cef_menu_model_t* model)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_context_menu_handler_t::on_before_context_menu
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_context_menu_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_context_menu_params_t*, valuetype CefNet.CApi.cef_menu_model_t*)
			ret
		}

		// int (*)(_cef_context_menu_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame, _cef_context_menu_params_t* params, _cef_menu_model_t* model, _cef_run_context_menu_callback_t* callback)*
		.method public hidebysig int32 RunContextMenu(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CApi.cef_context_menu_params_t* @params, valuetype CefNet.CApi.cef_menu_model_t* model, valuetype CefNet.CApi.cef_run_context_menu_callback_t* callback)
		{
			.maxstack 7
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.s 5
			ldarg.0
			ldfld void* CefNet.CApi.cef_context_menu_handler_t::run_context_menu
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_context_menu_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_context_menu_params_t*, valuetype CefNet.CApi.cef_menu_model_t*, valuetype CefNet.CApi.cef_run_context_menu_callback_t*)
			ret
		}

		// int (*)(_cef_context_menu_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame, _cef_context_menu_params_t* params, int command_id, cef_event_flags_t event_flags)*
		.method public hidebysig int32 OnContextMenuCommand(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CApi.cef_context_menu_params_t* @params, int32 command_id, valuetype CefNet.CefEventFlags event_flags)
		{
			.maxstack 7
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.s 5
			ldarg.0
			ldfld void* CefNet.CApi.cef_context_menu_handler_t::on_context_menu_command
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_context_menu_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_context_menu_params_t*, int32, valuetype CefNet.CefEventFlags)
			ret
		}

		// void (*)(_cef_context_menu_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame)*
		.method public hidebysig void OnContextMenuDismissed(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_context_menu_handler_t::on_context_menu_dismissed
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_context_menu_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*)
			ret
		}
	}
}

