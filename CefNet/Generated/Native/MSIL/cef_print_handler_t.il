// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_print_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_print_handler_t
	{
		// void (*)(_cef_print_handler_t* self, _cef_browser_t* browser)*
		.method public hidebysig void OnPrintStart(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_print_handler_t::on_print_start
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_print_handler_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}

		// void (*)(_cef_print_handler_t* self, _cef_browser_t* browser, _cef_print_settings_t* settings, int get_defaults)*
		.method public hidebysig void OnPrintSettings(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_print_settings_t* settings, int32 get_defaults)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_print_handler_t::on_print_settings
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_print_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_print_settings_t*, int32)
			ret
		}

		// int (*)(_cef_print_handler_t* self, _cef_browser_t* browser, int has_selection, _cef_print_dialog_callback_t* callback)*
		.method public hidebysig int32 OnPrintDialog(valuetype CefNet.CApi.cef_browser_t* browser, int32 has_selection, valuetype CefNet.CApi.cef_print_dialog_callback_t* callback)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_print_handler_t::on_print_dialog
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_print_handler_t*, valuetype CefNet.CApi.cef_browser_t*, int32, valuetype CefNet.CApi.cef_print_dialog_callback_t*)
			ret
		}

		// int (*)(_cef_print_handler_t* self, _cef_browser_t* browser, const cef_string_t* document_name, const cef_string_t* pdf_file_path, _cef_print_job_callback_t* callback)*
		.method public hidebysig int32 OnPrintJob(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_string_t* document_name, valuetype CefNet.CApi.cef_string_t* pdf_file_path, valuetype CefNet.CApi.cef_print_job_callback_t* callback)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_print_handler_t::on_print_job
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_print_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_print_job_callback_t*)
			ret
		}

		// void (*)(_cef_print_handler_t* self, _cef_browser_t* browser)*
		.method public hidebysig void OnPrintReset(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_print_handler_t::on_print_reset
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_print_handler_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}

		// cef_size_t (*)(_cef_print_handler_t* self, int device_units_per_inch)*
		.method public hidebysig valuetype CefNet.CApi.cef_size_t GetPdfPaperSize(int32 device_units_per_inch)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_print_handler_t::get_pdf_paper_size
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_size_t(valuetype CefNet.CApi.cef_print_handler_t*, int32)
			ret
		}
	}
}

