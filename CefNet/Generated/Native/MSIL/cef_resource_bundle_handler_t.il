// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_resource_bundle_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_resource_bundle_handler_t
	{
		// int (*)(_cef_resource_bundle_handler_t* self, int string_id, cef_string_t* string)*
		.method public hidebysig int32 GetLocalizedString(int32 string_id, valuetype CefNet.CApi.cef_string_t* @string)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_bundle_handler_t::get_localized_string
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_resource_bundle_handler_t*, int32, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_resource_bundle_handler_t* self, int resource_id, void** data, size_t* data_size)*
		.method public hidebysig int32 GetDataResource(int32 resource_id, void** data, native uint* data_size)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_bundle_handler_t::get_data_resource
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_resource_bundle_handler_t*, int32, void**, native uint*)
			ret
		}

		// int (*)(_cef_resource_bundle_handler_t* self, int resource_id, cef_scale_factor_t scale_factor, void** data, size_t* data_size)*
		.method public hidebysig int32 GetDataResourceForScale(int32 resource_id, valuetype CefNet.CefScaleFactor scale_factor, void** data, native uint* data_size)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_bundle_handler_t::get_data_resource_for_scale
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_resource_bundle_handler_t*, int32, valuetype CefNet.CefScaleFactor, void**, native uint*)
			ret
		}
	}
}

