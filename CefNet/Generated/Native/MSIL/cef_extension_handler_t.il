// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_extension_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_extension_handler_t
	{
		// void (*)(_cef_extension_handler_t* self, cef_errorcode_t result)*
		.method public hidebysig void OnExtensionLoadFailed(valuetype CefNet.CefErrorCode result)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_handler_t::on_extension_load_failed
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_extension_handler_t*, valuetype CefNet.CefErrorCode)
			ret
		}

		// void (*)(_cef_extension_handler_t* self, _cef_extension_t* extension)*
		.method public hidebysig void OnExtensionLoaded(valuetype CefNet.CApi.cef_extension_t* extension)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_handler_t::on_extension_loaded
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_extension_handler_t*, valuetype CefNet.CApi.cef_extension_t*)
			ret
		}

		// void (*)(_cef_extension_handler_t* self, _cef_extension_t* extension)*
		.method public hidebysig void OnExtensionUnloaded(valuetype CefNet.CApi.cef_extension_t* extension)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_handler_t::on_extension_unloaded
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_extension_handler_t*, valuetype CefNet.CApi.cef_extension_t*)
			ret
		}

		// int (*)(_cef_extension_handler_t* self, _cef_extension_t* extension, const cef_string_t* url, _cef_client_t** client, _cef_browser_settings_t* settings)*
		.method public hidebysig int32 OnBeforeBackgroundBrowser(valuetype CefNet.CApi.cef_extension_t* extension, valuetype CefNet.CApi.cef_string_t* url, valuetype CefNet.CApi.cef_client_t** client, valuetype CefNet.CApi.cef_browser_settings_t* settings)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_handler_t::on_before_background_browser
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_extension_handler_t*, valuetype CefNet.CApi.cef_extension_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_client_t**, valuetype CefNet.CApi.cef_browser_settings_t*)
			ret
		}

		// int (*)(_cef_extension_handler_t* self, _cef_extension_t* extension, _cef_browser_t* browser, _cef_browser_t* active_browser, int index, const cef_string_t* url, int active, _cef_window_info_t* windowInfo, _cef_client_t** client, _cef_browser_settings_t* settings)*
		.method public hidebysig int32 OnBeforeBrowser(valuetype CefNet.CApi.cef_extension_t* extension, valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_browser_t* active_browser, int32 index, valuetype CefNet.CApi.cef_string_t* url, int32 active, valuetype CefNet.CApi.cef_window_info_t* windowInfo, valuetype CefNet.CApi.cef_client_t** client, valuetype CefNet.CApi.cef_browser_settings_t* settings)
		{
			.maxstack 11
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.s 5
			ldarg.s 6
			ldarg.s 7
			ldarg.s 8
			ldarg.s 9
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_handler_t::on_before_browser
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_extension_handler_t*, valuetype CefNet.CApi.cef_extension_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_browser_t*, int32, valuetype CefNet.CApi.cef_string_t*, int32, valuetype CefNet.CApi.cef_window_info_t*, valuetype CefNet.CApi.cef_client_t**, valuetype CefNet.CApi.cef_browser_settings_t*)
			ret
		}

		// _cef_browser_t* (*)(_cef_extension_handler_t* self, _cef_extension_t* extension, _cef_browser_t* browser, int include_incognito)*
		.method public hidebysig valuetype CefNet.CApi.cef_browser_t* GetActiveBrowser(valuetype CefNet.CApi.cef_extension_t* extension, valuetype CefNet.CApi.cef_browser_t* browser, int32 include_incognito)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_handler_t::get_active_browser
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_browser_t*(valuetype CefNet.CApi.cef_extension_handler_t*, valuetype CefNet.CApi.cef_extension_t*, valuetype CefNet.CApi.cef_browser_t*, int32)
			ret
		}

		// int (*)(_cef_extension_handler_t* self, _cef_extension_t* extension, _cef_browser_t* browser, int include_incognito, _cef_browser_t* target_browser)*
		.method public hidebysig int32 CanAccessBrowser(valuetype CefNet.CApi.cef_extension_t* extension, valuetype CefNet.CApi.cef_browser_t* browser, int32 include_incognito, valuetype CefNet.CApi.cef_browser_t* target_browser)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_handler_t::can_access_browser
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_extension_handler_t*, valuetype CefNet.CApi.cef_extension_t*, valuetype CefNet.CApi.cef_browser_t*, int32, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}

		// int (*)(_cef_extension_handler_t* self, _cef_extension_t* extension, _cef_browser_t* browser, const cef_string_t* file, _cef_get_extension_resource_callback_t* callback)*
		.method public hidebysig int32 GetExtensionResource(valuetype CefNet.CApi.cef_extension_t* extension, valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_string_t* file, valuetype CefNet.CApi.cef_get_extension_resource_callback_t* callback)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_handler_t::get_extension_resource
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_extension_handler_t*, valuetype CefNet.CApi.cef_extension_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_get_extension_resource_callback_t*)
			ret
		}
	}
}

