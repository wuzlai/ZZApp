// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_devtools_message_observer_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_dev_tools_message_observer_t
	{
		// int (*)(_cef_dev_tools_message_observer_t* self, _cef_browser_t* browser, const void* message, size_t message_size)*
		.method public hidebysig int32 OnDevToolsMessage(valuetype CefNet.CApi.cef_browser_t* browser, void* message, native uint message_size)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_dev_tools_message_observer_t::on_dev_tools_message
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_dev_tools_message_observer_t*, valuetype CefNet.CApi.cef_browser_t*, void*, native uint)
			ret
		}

		// void (*)(_cef_dev_tools_message_observer_t* self, _cef_browser_t* browser, int message_id, int success, const void* result, size_t result_size)*
		.method public hidebysig void OnDevToolsMethodResult(valuetype CefNet.CApi.cef_browser_t* browser, int32 message_id, int32 success, void* result, native uint result_size)
		{
			.maxstack 7
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.s 5
			ldarg.0
			ldfld void* CefNet.CApi.cef_dev_tools_message_observer_t::on_dev_tools_method_result
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_dev_tools_message_observer_t*, valuetype CefNet.CApi.cef_browser_t*, int32, int32, void*, native uint)
			ret
		}

		// void (*)(_cef_dev_tools_message_observer_t* self, _cef_browser_t* browser, const cef_string_t* method, const void* params, size_t params_size)*
		.method public hidebysig void OnDevToolsEvent(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_string_t* 'method', void* @params, native uint params_size)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_dev_tools_message_observer_t::on_dev_tools_event
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_dev_tools_message_observer_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_string_t*, void*, native uint)
			ret
		}

		// void (*)(_cef_dev_tools_message_observer_t* self, _cef_browser_t* browser)*
		.method public hidebysig void OnDevToolsAgentAttached(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_dev_tools_message_observer_t::on_dev_tools_agent_attached
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_dev_tools_message_observer_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}

		// void (*)(_cef_dev_tools_message_observer_t* self, _cef_browser_t* browser)*
		.method public hidebysig void OnDevToolsAgentDetached(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_dev_tools_message_observer_t::on_dev_tools_agent_detached
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_dev_tools_message_observer_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}
	}
}

