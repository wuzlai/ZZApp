// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_values_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_value_t
	{
		// int (*)(_cef_value_t* self)*
		.method public hidebysig int32 IsValid()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::is_valid
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self)*
		.method public hidebysig int32 IsOwned()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::is_owned
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self)*
		.method public hidebysig int32 IsReadOnly()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::is_read_only
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self, _cef_value_t* that)*
		.method public hidebysig int32 IsSame(valuetype CefNet.CApi.cef_value_t* that)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::is_same
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*, valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self, _cef_value_t* that)*
		.method public hidebysig int32 IsEqual(valuetype CefNet.CApi.cef_value_t* that)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::is_equal
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*, valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// _cef_value_t* (*)(_cef_value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_value_t* Copy()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::copy
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_value_t*(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// cef_value_type_t (*)(_cef_value_t* self)*
		.method public hidebysig valuetype CefNet.CefValueType GetCefType()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::get_type
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CefValueType(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self)*
		.method public hidebysig int32 GetBool()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::get_bool
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self)*
		.method public hidebysig int32 GetInt()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::get_int
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// double (*)(_cef_value_t* self)*
		.method public hidebysig float64 GetDouble()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::get_double
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				float64(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetString()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::get_string
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// _cef_binary_value_t* (*)(_cef_value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_binary_value_t* GetBinary()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::get_binary
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_binary_value_t*(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// _cef_dictionary_value_t* (*)(_cef_value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_dictionary_value_t* GetDictionary()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::get_dictionary
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_dictionary_value_t*(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// _cef_list_value_t* (*)(_cef_value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_list_value_t* GetList()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::get_list
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_list_value_t*(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self)*
		.method public hidebysig int32 SetNull()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::set_null
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self, int value)*
		.method public hidebysig int32 SetBool(int32 'value')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::set_bool
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*, int32)
			ret
		}

		// int (*)(_cef_value_t* self, int value)*
		.method public hidebysig int32 SetInt(int32 'value')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::set_int
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*, int32)
			ret
		}

		// int (*)(_cef_value_t* self, double value)*
		.method public hidebysig int32 SetDouble(float64 'value')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::set_double
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*, float64)
			ret
		}

		// int (*)(_cef_value_t* self, const cef_string_t* value)*
		.method public hidebysig int32 SetString(valuetype CefNet.CApi.cef_string_t* 'value')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::set_string
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_value_t* self, _cef_binary_value_t* value)*
		.method public hidebysig int32 SetBinary(valuetype CefNet.CApi.cef_binary_value_t* 'value')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::set_binary
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*, valuetype CefNet.CApi.cef_binary_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self, _cef_dictionary_value_t* value)*
		.method public hidebysig int32 SetDictionary(valuetype CefNet.CApi.cef_dictionary_value_t* 'value')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::set_dictionary
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*, valuetype CefNet.CApi.cef_dictionary_value_t*)
			ret
		}

		// int (*)(_cef_value_t* self, _cef_list_value_t* value)*
		.method public hidebysig int32 SetList(valuetype CefNet.CApi.cef_list_value_t* 'value')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_value_t::set_list
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_value_t*, valuetype CefNet.CApi.cef_list_value_t*)
			ret
		}
	}
}

