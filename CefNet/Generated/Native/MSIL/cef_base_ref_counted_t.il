// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_base_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_base_ref_counted_t
	{
		// void (*)(_cef_base_ref_counted_t* self)*
		.method public hidebysig void AddRef()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_base_ref_counted_t::add_ref
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_base_ref_counted_t*)
			ret
		}

		// int (*)(_cef_base_ref_counted_t* self)*
		.method public hidebysig int32 Release()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_base_ref_counted_t::release
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_base_ref_counted_t*)
			ret
		}

		// int (*)(_cef_base_ref_counted_t* self)*
		.method public hidebysig int32 HasOneRef()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_base_ref_counted_t::has_one_ref
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_base_ref_counted_t*)
			ret
		}

		// int (*)(_cef_base_ref_counted_t* self)*
		.method public hidebysig int32 HasAtLeastOneRef()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_base_ref_counted_t::has_at_least_one_ref
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_base_ref_counted_t*)
			ret
		}
	}
}

