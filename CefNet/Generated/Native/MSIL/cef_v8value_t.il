// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_v8_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_v8value_t
	{
		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsValid()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_valid
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsUndefined()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_undefined
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsNull()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_null
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsBool()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_bool
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsInt()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_int
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsUInt()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_uint
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsDouble()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_double
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsDate()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_date
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsString()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_string
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsObject()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_object
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsArray()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_array
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsArrayBuffer()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_array_buffer
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsFunction()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_function
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self, _cef_v8value_t* that)*
		.method public hidebysig int32 IsSame(valuetype CefNet.CApi.cef_v8value_t* that)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_same
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 GetBoolValue()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_bool_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int32 (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 GetIntValue()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_int_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// uint32 (*)(_cef_v8value_t* self)*
		.method public hidebysig uint32 GetUIntValue()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_uint_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				uint32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// double (*)(_cef_v8value_t* self)*
		.method public hidebysig float64 GetDoubleValue()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_double_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				float64(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// cef_time_t (*)(_cef_v8value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_time_t GetDateValue()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_date_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_time_t(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_v8value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetStringValue()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_string_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 IsUserCreated()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::is_user_created
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 HasException()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::has_exception
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// _cef_v8exception_t* (*)(_cef_v8value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_v8exception_t* GetException()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_exception
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_v8exception_t*(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 ClearException()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::clear_exception
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 WillRethrowExceptions()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::will_rethrow_exceptions
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self, int rethrow)*
		.method public hidebysig int32 SetRethrowExceptions(int32 'rethrow')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::set_rethrow_exceptions
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, int32)
			ret
		}

		// int (*)(_cef_v8value_t* self, const cef_string_t* key)*
		.method public hidebysig int32 HasValueByKey(valuetype CefNet.CApi.cef_string_t* key)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::has_value_bykey
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self, int index)*
		.method public hidebysig int32 HasValueByIndex(int32 index)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::has_value_byindex
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, int32)
			ret
		}

		// int (*)(_cef_v8value_t* self, const cef_string_t* key)*
		.method public hidebysig int32 DeleteValueByKey(valuetype CefNet.CApi.cef_string_t* key)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::delete_value_bykey
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self, int index)*
		.method public hidebysig int32 DeleteValueByIndex(int32 index)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::delete_value_byindex
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, int32)
			ret
		}

		// _cef_v8value_t* (*)(_cef_v8value_t* self, const cef_string_t* key)*
		.method public hidebysig valuetype CefNet.CApi.cef_v8value_t* GetValueByKey(valuetype CefNet.CApi.cef_string_t* key)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_value_bykey
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_v8value_t*(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// _cef_v8value_t* (*)(_cef_v8value_t* self, int index)*
		.method public hidebysig valuetype CefNet.CApi.cef_v8value_t* GetValueByIndex(int32 index)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_value_byindex
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_v8value_t*(valuetype CefNet.CApi.cef_v8value_t*, int32)
			ret
		}

		// int (*)(_cef_v8value_t* self, const cef_string_t* key, _cef_v8value_t* value, cef_v8_propertyattribute_t attribute)*
		.method public hidebysig int32 SetValueByKey(valuetype CefNet.CApi.cef_string_t* key, valuetype CefNet.CApi.cef_v8value_t* 'value', valuetype CefNet.CefV8PropertyAttribute attribute)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::set_value_bykey
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CefV8PropertyAttribute)
			ret
		}

		// int (*)(_cef_v8value_t* self, int index, _cef_v8value_t* value)*
		.method public hidebysig int32 SetValueByIndex(int32 index, valuetype CefNet.CApi.cef_v8value_t* 'value')
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::set_value_byindex
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, int32, valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self, const cef_string_t* key, cef_v8_accesscontrol_t settings, cef_v8_propertyattribute_t attribute)*
		.method public hidebysig int32 SetValueByAccessor(valuetype CefNet.CApi.cef_string_t* key, valuetype CefNet.CefV8AccessControl settings, valuetype CefNet.CefV8PropertyAttribute attribute)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::set_value_byaccessor
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CefV8AccessControl, valuetype CefNet.CefV8PropertyAttribute)
			ret
		}

		// int (*)(_cef_v8value_t* self, cef_string_list_t keys)*
		.method public hidebysig int32 GetKeys(valuetype CefNet.CApi.cef_string_list_t keys)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_keys
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_string_list_t)
			ret
		}

		// int (*)(_cef_v8value_t* self, _cef_base_ref_counted_t* user_data)*
		.method public hidebysig int32 SetUserData(valuetype CefNet.CApi.cef_base_ref_counted_t* user_data)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::set_user_data
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_base_ref_counted_t*)
			ret
		}

		// _cef_base_ref_counted_t* (*)(_cef_v8value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_base_ref_counted_t* GetUserData()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_user_data
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_base_ref_counted_t*(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 GetExternallyAllocatedMemory()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_externally_allocated_memory
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self, int change_in_bytes)*
		.method public hidebysig int32 AdjustExternallyAllocatedMemory(int32 change_in_bytes)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::adjust_externally_allocated_memory
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*, int32)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 GetArrayLength()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_array_length
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// _cef_v8array_buffer_release_callback_t* (*)(_cef_v8value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_v8array_buffer_release_callback_t* GetArrayBufferReleaseCallback()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_array_buffer_release_callback
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_v8array_buffer_release_callback_t*(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// int (*)(_cef_v8value_t* self)*
		.method public hidebysig int32 NeuterArrayBuffer()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::neuter_array_buffer
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_v8value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetFunctionName()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_function_name
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// _cef_v8handler_t* (*)(_cef_v8value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_v8handler_t* GetFunctionHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::get_function_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_v8handler_t*(valuetype CefNet.CApi.cef_v8value_t*)
			ret
		}

		// _cef_v8value_t* (*)(_cef_v8value_t* self, _cef_v8value_t* object, size_t argumentsCount, const _cef_v8value_t** arguments)*
		.method public hidebysig valuetype CefNet.CApi.cef_v8value_t* ExecuteFunction(valuetype CefNet.CApi.cef_v8value_t* @object, native uint argumentsCount, valuetype CefNet.CApi.cef_v8value_t** arguments)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::execute_function
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_v8value_t*(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_v8value_t*, native uint, valuetype CefNet.CApi.cef_v8value_t**)
			ret
		}

		// _cef_v8value_t* (*)(_cef_v8value_t* self, _cef_v8context_t* context, _cef_v8value_t* object, size_t argumentsCount, const _cef_v8value_t** arguments)*
		.method public hidebysig valuetype CefNet.CApi.cef_v8value_t* ExecuteFunctionWithContext(valuetype CefNet.CApi.cef_v8context_t* context, valuetype CefNet.CApi.cef_v8value_t* @object, native uint argumentsCount, valuetype CefNet.CApi.cef_v8value_t** arguments)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8value_t::execute_function_with_context
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_v8value_t*(valuetype CefNet.CApi.cef_v8value_t*, valuetype CefNet.CApi.cef_v8context_t*, valuetype CefNet.CApi.cef_v8value_t*, native uint, valuetype CefNet.CApi.cef_v8value_t**)
			ret
		}
	}
}

