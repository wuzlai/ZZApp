// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_render_process_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_render_process_handler_t
	{
		// void (*)(_cef_render_process_handler_t* self, _cef_list_value_t* extra_info)*
		.method public hidebysig void OnRenderThreadCreated(valuetype CefNet.CApi.cef_list_value_t* extra_info)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::on_render_thread_created
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_render_process_handler_t*, valuetype CefNet.CApi.cef_list_value_t*)
			ret
		}

		// void (*)(_cef_render_process_handler_t* self)*
		.method public hidebysig void OnWebKitInitialized()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::on_web_kit_initialized
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_render_process_handler_t*)
			ret
		}

		// void (*)(_cef_render_process_handler_t* self, _cef_browser_t* browser, _cef_dictionary_value_t* extra_info)*
		.method public hidebysig void OnBrowserCreated(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_dictionary_value_t* extra_info)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::on_browser_created
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_render_process_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_dictionary_value_t*)
			ret
		}

		// void (*)(_cef_render_process_handler_t* self, _cef_browser_t* browser)*
		.method public hidebysig void OnBrowserDestroyed(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::on_browser_destroyed
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_render_process_handler_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}

		// _cef_load_handler_t* (*)(_cef_render_process_handler_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_load_handler_t* GetLoadHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::get_load_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_load_handler_t*(valuetype CefNet.CApi.cef_render_process_handler_t*)
			ret
		}

		// void (*)(_cef_render_process_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame, _cef_v8context_t* context)*
		.method public hidebysig void OnContextCreated(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CApi.cef_v8context_t* context)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::on_context_created
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_render_process_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_v8context_t*)
			ret
		}

		// void (*)(_cef_render_process_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame, _cef_v8context_t* context)*
		.method public hidebysig void OnContextReleased(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CApi.cef_v8context_t* context)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::on_context_released
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_render_process_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_v8context_t*)
			ret
		}

		// void (*)(_cef_render_process_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame, _cef_v8context_t* context, _cef_v8exception_t* exception, _cef_v8stack_trace_t* stackTrace)*
		.method public hidebysig void OnUncaughtException(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CApi.cef_v8context_t* context, valuetype CefNet.CApi.cef_v8exception_t* exception, valuetype CefNet.CApi.cef_v8stack_trace_t* stackTrace)
		{
			.maxstack 7
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.s 5
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::on_uncaught_exception
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_render_process_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_v8context_t*, valuetype CefNet.CApi.cef_v8exception_t*, valuetype CefNet.CApi.cef_v8stack_trace_t*)
			ret
		}

		// void (*)(_cef_render_process_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame, _cef_domnode_t* node)*
		.method public hidebysig void OnFocusedNodeChanged(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CApi.cef_domnode_t* node)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::on_focused_node_changed
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_render_process_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_domnode_t*)
			ret
		}

		// int (*)(_cef_render_process_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame, cef_process_id_t source_process, _cef_process_message_t* message)*
		.method public hidebysig int32 OnProcessMessageReceived(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CefProcessId source_process, valuetype CefNet.CApi.cef_process_message_t* message)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_render_process_handler_t::on_process_message_received
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_render_process_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CefProcessId, valuetype CefNet.CApi.cef_process_message_t*)
			ret
		}
	}
}

