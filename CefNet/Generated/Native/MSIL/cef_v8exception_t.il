// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_v8_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_v8exception_t
	{
		// cef_string_userfree_t (*)(_cef_v8exception_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetMessage()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8exception_t::get_message
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_v8exception_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_v8exception_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetSourceLine()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8exception_t::get_source_line
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_v8exception_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_v8exception_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetScriptResourceName()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8exception_t::get_script_resource_name
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_v8exception_t*)
			ret
		}

		// int (*)(_cef_v8exception_t* self)*
		.method public hidebysig int32 GetLineNumber()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8exception_t::get_line_number
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8exception_t*)
			ret
		}

		// int (*)(_cef_v8exception_t* self)*
		.method public hidebysig int32 GetStartPosition()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8exception_t::get_start_position
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8exception_t*)
			ret
		}

		// int (*)(_cef_v8exception_t* self)*
		.method public hidebysig int32 GetEndPosition()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8exception_t::get_end_position
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8exception_t*)
			ret
		}

		// int (*)(_cef_v8exception_t* self)*
		.method public hidebysig int32 GetStartColumn()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8exception_t::get_start_column
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8exception_t*)
			ret
		}

		// int (*)(_cef_v8exception_t* self)*
		.method public hidebysig int32 GetEndColumn()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_v8exception_t::get_end_column
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_v8exception_t*)
			ret
		}
	}
}

