// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_dom_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_domdocument_t
	{
		// cef_dom_document_type_t (*)(_cef_domdocument_t* self)*
		.method public hidebysig valuetype CefNet.CefDOMDocumentType GetCefType()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_type
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CefDOMDocumentType(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// _cef_domnode_t* (*)(_cef_domdocument_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_domnode_t* GetDocument()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_document
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_domnode_t*(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// _cef_domnode_t* (*)(_cef_domdocument_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_domnode_t* GetBody()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_body
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_domnode_t*(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// _cef_domnode_t* (*)(_cef_domdocument_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_domnode_t* GetHead()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_head
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_domnode_t*(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_domdocument_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetTitle()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_title
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// _cef_domnode_t* (*)(_cef_domdocument_t* self, const cef_string_t* id)*
		.method public hidebysig valuetype CefNet.CApi.cef_domnode_t* GetElementById(valuetype CefNet.CApi.cef_string_t* id)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_element_by_id
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_domnode_t*(valuetype CefNet.CApi.cef_domdocument_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// _cef_domnode_t* (*)(_cef_domdocument_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_domnode_t* GetFocusedNode()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_focused_node
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_domnode_t*(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// int (*)(_cef_domdocument_t* self)*
		.method public hidebysig int32 HasSelection()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::has_selection
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// int (*)(_cef_domdocument_t* self)*
		.method public hidebysig int32 GetSelectionStartOffset()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_selection_start_offset
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// int (*)(_cef_domdocument_t* self)*
		.method public hidebysig int32 GetSelectionEndOffset()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_selection_end_offset
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_domdocument_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetSelectionAsMarkup()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_selection_as_markup
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_domdocument_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetSelectionAsText()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_selection_as_text
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_domdocument_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetBaseUrl()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_base_url
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_domdocument_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_domdocument_t* self, const cef_string_t* partialURL)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetCompleteUrl(valuetype CefNet.CApi.cef_string_t* partialURL)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_domdocument_t::get_complete_url
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_domdocument_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}
	}
}

