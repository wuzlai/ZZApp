// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_process_message_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_process_message_t
	{
		// int (*)(_cef_process_message_t* self)*
		.method public hidebysig int32 IsValid()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_process_message_t::is_valid
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_process_message_t*)
			ret
		}

		// int (*)(_cef_process_message_t* self)*
		.method public hidebysig int32 IsReadOnly()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_process_message_t::is_read_only
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_process_message_t*)
			ret
		}

		// _cef_process_message_t* (*)(_cef_process_message_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_process_message_t* Copy()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_process_message_t::copy
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_process_message_t*(valuetype CefNet.CApi.cef_process_message_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_process_message_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetName()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_process_message_t::get_name
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_process_message_t*)
			ret
		}

		// _cef_list_value_t* (*)(_cef_process_message_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_list_value_t* GetArgumentList()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_process_message_t::get_argument_list
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_list_value_t*(valuetype CefNet.CApi.cef_process_message_t*)
			ret
		}
	}
}

