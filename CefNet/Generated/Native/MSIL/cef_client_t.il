// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_client_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_client_t
	{
		// _cef_audio_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_audio_handler_t* GetAudioHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_audio_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_audio_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_context_menu_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_context_menu_handler_t* GetContextMenuHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_context_menu_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_context_menu_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_dialog_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_dialog_handler_t* GetDialogHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_dialog_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_dialog_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_display_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_display_handler_t* GetDisplayHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_display_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_display_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_download_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_download_handler_t* GetDownloadHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_download_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_download_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_drag_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_drag_handler_t* GetDragHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_drag_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_drag_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_find_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_find_handler_t* GetFindHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_find_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_find_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_focus_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_focus_handler_t* GetFocusHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_focus_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_focus_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_jsdialog_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_jsdialog_handler_t* GetJSDialogHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_jsdialog_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_jsdialog_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_keyboard_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_keyboard_handler_t* GetKeyboardHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_keyboard_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_keyboard_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_life_span_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_life_span_handler_t* GetLifeSpanHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_life_span_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_life_span_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_load_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_load_handler_t* GetLoadHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_load_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_load_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_render_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_render_handler_t* GetRenderHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_render_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_render_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// _cef_request_handler_t* (*)(_cef_client_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_request_handler_t* GetRequestHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::get_request_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_request_handler_t*(valuetype CefNet.CApi.cef_client_t*)
			ret
		}

		// int (*)(_cef_client_t* self, _cef_browser_t* browser, _cef_frame_t* frame, cef_process_id_t source_process, _cef_process_message_t* message)*
		.method public hidebysig int32 OnProcessMessageReceived(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CefProcessId source_process, valuetype CefNet.CApi.cef_process_message_t* message)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_client_t::on_process_message_received
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_client_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CefProcessId, valuetype CefNet.CApi.cef_process_message_t*)
			ret
		}
	}
}

