// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_resource_bundle_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_resource_bundle_t
	{
		// cef_string_userfree_t (*)(_cef_resource_bundle_t* self, int string_id)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetLocalizedString(int32 string_id)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_bundle_t::get_localized_string
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_resource_bundle_t*, int32)
			ret
		}

		// _cef_binary_value_t* (*)(_cef_resource_bundle_t* self, int resource_id)*
		.method public hidebysig valuetype CefNet.CApi.cef_binary_value_t* GetDataResource(int32 resource_id)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_bundle_t::get_data_resource
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_binary_value_t*(valuetype CefNet.CApi.cef_resource_bundle_t*, int32)
			ret
		}

		// _cef_binary_value_t* (*)(_cef_resource_bundle_t* self, int resource_id, cef_scale_factor_t scale_factor)*
		.method public hidebysig valuetype CefNet.CApi.cef_binary_value_t* GetDataResourceForScale(int32 resource_id, valuetype CefNet.CefScaleFactor scale_factor)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_bundle_t::get_data_resource_for_scale
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_binary_value_t*(valuetype CefNet.CApi.cef_resource_bundle_t*, int32, valuetype CefNet.CefScaleFactor)
			ret
		}
	}
}

