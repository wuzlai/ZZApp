// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_extension_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_extension_t
	{
		// cef_string_userfree_t (*)(_cef_extension_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetIdentifier()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_t::get_identifier
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_extension_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_extension_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetPath()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_t::get_path
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_extension_t*)
			ret
		}

		// _cef_dictionary_value_t* (*)(_cef_extension_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_dictionary_value_t* GetManifest()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_t::get_manifest
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_dictionary_value_t*(valuetype CefNet.CApi.cef_extension_t*)
			ret
		}

		// int (*)(_cef_extension_t* self, _cef_extension_t* that)*
		.method public hidebysig int32 IsSame(valuetype CefNet.CApi.cef_extension_t* that)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_t::is_same
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_extension_t*, valuetype CefNet.CApi.cef_extension_t*)
			ret
		}

		// _cef_extension_handler_t* (*)(_cef_extension_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_extension_handler_t* GetHandler()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_t::get_handler
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_extension_handler_t*(valuetype CefNet.CApi.cef_extension_t*)
			ret
		}

		// _cef_request_context_t* (*)(_cef_extension_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_request_context_t* GetLoaderContext()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_t::get_loader_context
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_request_context_t*(valuetype CefNet.CApi.cef_extension_t*)
			ret
		}

		// int (*)(_cef_extension_t* self)*
		.method public hidebysig int32 IsLoaded()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_t::is_loaded
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_extension_t*)
			ret
		}

		// void (*)(_cef_extension_t* self)*
		.method public hidebysig void Unload()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_extension_t::unload
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_extension_t*)
			ret
		}
	}
}

