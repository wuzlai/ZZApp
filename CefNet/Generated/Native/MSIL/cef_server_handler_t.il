// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_server_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_server_handler_t
	{
		// void (*)(_cef_server_handler_t* self, _cef_server_t* server)*
		.method public hidebysig void OnServerCreated(valuetype CefNet.CApi.cef_server_t* server)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_server_handler_t::on_server_created
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_server_handler_t*, valuetype CefNet.CApi.cef_server_t*)
			ret
		}

		// void (*)(_cef_server_handler_t* self, _cef_server_t* server)*
		.method public hidebysig void OnServerDestroyed(valuetype CefNet.CApi.cef_server_t* server)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_server_handler_t::on_server_destroyed
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_server_handler_t*, valuetype CefNet.CApi.cef_server_t*)
			ret
		}

		// void (*)(_cef_server_handler_t* self, _cef_server_t* server, int connection_id)*
		.method public hidebysig void OnClientConnected(valuetype CefNet.CApi.cef_server_t* server, int32 connection_id)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_server_handler_t::on_client_connected
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_server_handler_t*, valuetype CefNet.CApi.cef_server_t*, int32)
			ret
		}

		// void (*)(_cef_server_handler_t* self, _cef_server_t* server, int connection_id)*
		.method public hidebysig void OnClientDisconnected(valuetype CefNet.CApi.cef_server_t* server, int32 connection_id)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_server_handler_t::on_client_disconnected
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_server_handler_t*, valuetype CefNet.CApi.cef_server_t*, int32)
			ret
		}

		// void (*)(_cef_server_handler_t* self, _cef_server_t* server, int connection_id, const cef_string_t* client_address, _cef_request_t* request)*
		.method public hidebysig void OnHttpRequest(valuetype CefNet.CApi.cef_server_t* server, int32 connection_id, valuetype CefNet.CApi.cef_string_t* client_address, valuetype CefNet.CApi.cef_request_t* 'request')
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_server_handler_t::on_http_request
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_server_handler_t*, valuetype CefNet.CApi.cef_server_t*, int32, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_request_t*)
			ret
		}

		// void (*)(_cef_server_handler_t* self, _cef_server_t* server, int connection_id, const cef_string_t* client_address, _cef_request_t* request, _cef_callback_t* callback)*
		.method public hidebysig void OnWebSocketRequest(valuetype CefNet.CApi.cef_server_t* server, int32 connection_id, valuetype CefNet.CApi.cef_string_t* client_address, valuetype CefNet.CApi.cef_request_t* 'request', valuetype CefNet.CApi.cef_callback_t* callback)
		{
			.maxstack 7
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.s 5
			ldarg.0
			ldfld void* CefNet.CApi.cef_server_handler_t::on_web_socket_request
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_server_handler_t*, valuetype CefNet.CApi.cef_server_t*, int32, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_request_t*, valuetype CefNet.CApi.cef_callback_t*)
			ret
		}

		// void (*)(_cef_server_handler_t* self, _cef_server_t* server, int connection_id)*
		.method public hidebysig void OnWebSocketConnected(valuetype CefNet.CApi.cef_server_t* server, int32 connection_id)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_server_handler_t::on_web_socket_connected
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_server_handler_t*, valuetype CefNet.CApi.cef_server_t*, int32)
			ret
		}

		// void (*)(_cef_server_handler_t* self, _cef_server_t* server, int connection_id, const void* data, size_t data_size)*
		.method public hidebysig void OnWebSocketMessage(valuetype CefNet.CApi.cef_server_t* server, int32 connection_id, void* data, native uint data_size)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_server_handler_t::on_web_socket_message
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_server_handler_t*, valuetype CefNet.CApi.cef_server_t*, int32, void*, native uint)
			ret
		}
	}
}

