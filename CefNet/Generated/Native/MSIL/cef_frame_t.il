// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_frame_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_frame_t
	{
		// int (*)(_cef_frame_t* self)*
		.method public hidebysig int32 IsValid()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::is_valid
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self)*
		.method public hidebysig void Undo()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::undo
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self)*
		.method public hidebysig void Redo()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::redo
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self)*
		.method public hidebysig void Cut()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::cut
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self)*
		.method public hidebysig void Copy()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::copy
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self)*
		.method public hidebysig void Paste()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::paste
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self)*
		.method public hidebysig void Del()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::del
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self)*
		.method public hidebysig void SelectAll()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::select_all
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self)*
		.method public hidebysig void ViewSource()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::view_source
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self, _cef_string_visitor_t* visitor)*
		.method public hidebysig void GetSource(valuetype CefNet.CApi.cef_string_visitor_t* visitor)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::get_source
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_string_visitor_t*)
			ret
		}

		// void (*)(_cef_frame_t* self, _cef_string_visitor_t* visitor)*
		.method public hidebysig void GetText(valuetype CefNet.CApi.cef_string_visitor_t* visitor)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::get_text
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_string_visitor_t*)
			ret
		}

		// void (*)(_cef_frame_t* self, _cef_request_t* request)*
		.method public hidebysig void LoadRequest(valuetype CefNet.CApi.cef_request_t* 'request')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::load_request
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_request_t*)
			ret
		}

		// void (*)(_cef_frame_t* self, const cef_string_t* url)*
		.method public hidebysig void LoadUrl(valuetype CefNet.CApi.cef_string_t* url)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::load_url
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_frame_t* self, const cef_string_t* code, const cef_string_t* script_url, int start_line)*
		.method public hidebysig void ExecuteJavaScript(valuetype CefNet.CApi.cef_string_t* code, valuetype CefNet.CApi.cef_string_t* script_url, int32 start_line)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::execute_java_script
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_string_t*, int32)
			ret
		}

		// int (*)(_cef_frame_t* self)*
		.method public hidebysig int32 IsMain()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::is_main
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// int (*)(_cef_frame_t* self)*
		.method public hidebysig int32 IsFocused()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::is_focused
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_frame_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetName()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::get_name
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// int64 (*)(_cef_frame_t* self)*
		.method public hidebysig int64 GetIdentifier()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::get_identifier
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int64(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// _cef_frame_t* (*)(_cef_frame_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_frame_t* GetParent()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::get_parent
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_frame_t*(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_frame_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetUrl()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::get_url
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// _cef_browser_t* (*)(_cef_frame_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_browser_t* GetBrowser()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::get_browser
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_browser_t*(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// _cef_v8context_t* (*)(_cef_frame_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_v8context_t* GetV8Context()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::get_v8context
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_v8context_t*(valuetype CefNet.CApi.cef_frame_t*)
			ret
		}

		// void (*)(_cef_frame_t* self, _cef_domvisitor_t* visitor)*
		.method public hidebysig void VisitDOM(valuetype CefNet.CApi.cef_domvisitor_t* visitor)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::visit_dom
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_domvisitor_t*)
			ret
		}

		// _cef_urlrequest_t* (*)(_cef_frame_t* self, _cef_request_t* request, _cef_urlrequest_client_t* client)*
		.method public hidebysig valuetype CefNet.CApi.cef_urlrequest_t* CreateUrlRequest(valuetype CefNet.CApi.cef_request_t* 'request', valuetype CefNet.CApi.cef_urlrequest_client_t* client)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::create_urlrequest
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_urlrequest_t*(valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_request_t*, valuetype CefNet.CApi.cef_urlrequest_client_t*)
			ret
		}

		// void (*)(_cef_frame_t* self, cef_process_id_t target_process, _cef_process_message_t* message)*
		.method public hidebysig void SendProcessMessage(valuetype CefNet.CefProcessId target_process, valuetype CefNet.CApi.cef_process_message_t* message)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_frame_t::send_process_message
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CefProcessId, valuetype CefNet.CApi.cef_process_message_t*)
			ret
		}
	}
}

