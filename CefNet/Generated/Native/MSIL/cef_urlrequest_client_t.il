// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_urlrequest_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_urlrequest_client_t
	{
		// void (*)(_cef_urlrequest_client_t* self, _cef_urlrequest_t* request)*
		.method public hidebysig void OnRequestComplete(valuetype CefNet.CApi.cef_urlrequest_t* 'request')
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_urlrequest_client_t::on_request_complete
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_urlrequest_client_t*, valuetype CefNet.CApi.cef_urlrequest_t*)
			ret
		}

		// void (*)(_cef_urlrequest_client_t* self, _cef_urlrequest_t* request, int64 current, int64 total)*
		.method public hidebysig void OnUploadProgress(valuetype CefNet.CApi.cef_urlrequest_t* 'request', int64 current, int64 total)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_urlrequest_client_t::on_upload_progress
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_urlrequest_client_t*, valuetype CefNet.CApi.cef_urlrequest_t*, int64, int64)
			ret
		}

		// void (*)(_cef_urlrequest_client_t* self, _cef_urlrequest_t* request, int64 current, int64 total)*
		.method public hidebysig void OnDownloadProgress(valuetype CefNet.CApi.cef_urlrequest_t* 'request', int64 current, int64 total)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_urlrequest_client_t::on_download_progress
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_urlrequest_client_t*, valuetype CefNet.CApi.cef_urlrequest_t*, int64, int64)
			ret
		}

		// void (*)(_cef_urlrequest_client_t* self, _cef_urlrequest_t* request, const void* data, size_t data_length)*
		.method public hidebysig void OnDownloadData(valuetype CefNet.CApi.cef_urlrequest_t* 'request', void* data, native uint data_length)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_urlrequest_client_t::on_download_data
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_urlrequest_client_t*, valuetype CefNet.CApi.cef_urlrequest_t*, void*, native uint)
			ret
		}

		// int (*)(_cef_urlrequest_client_t* self, int isProxy, const cef_string_t* host, int port, const cef_string_t* realm, const cef_string_t* scheme, _cef_auth_callback_t* callback)*
		.method public hidebysig int32 GetAuthCredentials(int32 isProxy, valuetype CefNet.CApi.cef_string_t* host, int32 port, valuetype CefNet.CApi.cef_string_t* realm, valuetype CefNet.CApi.cef_string_t* scheme, valuetype CefNet.CApi.cef_auth_callback_t* callback)
		{
			.maxstack 8
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.s 5
			ldarg.s 6
			ldarg.0
			ldfld void* CefNet.CApi.cef_urlrequest_client_t::get_auth_credentials
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_urlrequest_client_t*, int32, valuetype CefNet.CApi.cef_string_t*, int32, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_auth_callback_t*)
			ret
		}
	}
}

