// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_xml_reader_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_xml_reader_t
	{
		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 MoveToNextNode()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::move_to_next_node
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 Close()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::close
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 HasError()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::has_error
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetError()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_error
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_xml_node_type_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CefXmlNodeType GetCefType()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_type
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CefXmlNodeType(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 GetDepth()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_depth
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetLocalName()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_local_name
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetPrefix()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_prefix
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetQualifiedName()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_qualified_name
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetNamespaceUri()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_namespace_uri
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetBaseUri()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_base_uri
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetXmlLang()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_xml_lang
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 IsEmptyElement()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::is_empty_element
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 HasValue()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::has_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetValue()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 HasAttributes()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::has_attributes
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// size_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig native uint GetAttributeCount()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_attribute_count
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				native uint(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self, int index)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetAttributeByIndex(int32 index)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_attribute_byindex
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*, int32)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self, const cef_string_t* qualifiedName)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetAttributeByQName(valuetype CefNet.CApi.cef_string_t* qualifiedName)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_attribute_byqname
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self, const cef_string_t* localName, const cef_string_t* namespaceURI)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetAttributeByLName(valuetype CefNet.CApi.cef_string_t* localName, valuetype CefNet.CApi.cef_string_t* namespaceURI)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_attribute_bylname
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetInnerXml()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_inner_xml
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_xml_reader_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetOuterXml()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_outer_xml
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 GetLineNumber()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::get_line_number
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self, int index)*
		.method public hidebysig int32 MoveToAttributeByIndex(int32 index)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::move_to_attribute_byindex
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*, int32)
			ret
		}

		// int (*)(_cef_xml_reader_t* self, const cef_string_t* qualifiedName)*
		.method public hidebysig int32 MoveToAttributeByQName(valuetype CefNet.CApi.cef_string_t* qualifiedName)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::move_to_attribute_byqname
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self, const cef_string_t* localName, const cef_string_t* namespaceURI)*
		.method public hidebysig int32 MoveToAttributeByLName(valuetype CefNet.CApi.cef_string_t* localName, valuetype CefNet.CApi.cef_string_t* namespaceURI)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::move_to_attribute_bylname
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 MoveToFirstAttribute()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::move_to_first_attribute
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 MoveToNextAttribute()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::move_to_next_attribute
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}

		// int (*)(_cef_xml_reader_t* self)*
		.method public hidebysig int32 MoveToCarryingElement()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_xml_reader_t::move_to_carrying_element
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_xml_reader_t*)
			ret
		}
	}
}

