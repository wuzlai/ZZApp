// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_resource_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_resource_handler_t
	{
		// int (*)(_cef_resource_handler_t* self, _cef_request_t* request, int* handle_request, _cef_callback_t* callback)*
		.method public hidebysig int32 Open(valuetype CefNet.CApi.cef_request_t* 'request', int32* handle_request, valuetype CefNet.CApi.cef_callback_t* callback)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_handler_t::open
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_resource_handler_t*, valuetype CefNet.CApi.cef_request_t*, int32*, valuetype CefNet.CApi.cef_callback_t*)
			ret
		}

		// int (*)(_cef_resource_handler_t* self, _cef_request_t* request, _cef_callback_t* callback)*
		.method public hidebysig int32 ProcessRequest(valuetype CefNet.CApi.cef_request_t* 'request', valuetype CefNet.CApi.cef_callback_t* callback)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_handler_t::process_request
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_resource_handler_t*, valuetype CefNet.CApi.cef_request_t*, valuetype CefNet.CApi.cef_callback_t*)
			ret
		}

		// void (*)(_cef_resource_handler_t* self, _cef_response_t* response, int64* response_length, cef_string_t* redirectUrl)*
		.method public hidebysig void GetResponseHeaders(valuetype CefNet.CApi.cef_response_t* response, int64* response_length, valuetype CefNet.CApi.cef_string_t* redirectUrl)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_handler_t::get_response_headers
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_resource_handler_t*, valuetype CefNet.CApi.cef_response_t*, int64*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_resource_handler_t* self, int64 bytes_to_skip, int64* bytes_skipped, _cef_resource_skip_callback_t* callback)*
		.method public hidebysig int32 Skip(int64 bytes_to_skip, int64* bytes_skipped, valuetype CefNet.CApi.cef_resource_skip_callback_t* callback)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_handler_t::skip
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_resource_handler_t*, int64, int64*, valuetype CefNet.CApi.cef_resource_skip_callback_t*)
			ret
		}

		// int (*)(_cef_resource_handler_t* self, void* data_out, int bytes_to_read, int* bytes_read, _cef_resource_read_callback_t* callback)*
		.method public hidebysig int32 Read(void* data_out, int32 bytes_to_read, int32* bytes_read, valuetype CefNet.CApi.cef_resource_read_callback_t* callback)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_handler_t::read
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_resource_handler_t*, void*, int32, int32*, valuetype CefNet.CApi.cef_resource_read_callback_t*)
			ret
		}

		// int (*)(_cef_resource_handler_t* self, void* data_out, int bytes_to_read, int* bytes_read, _cef_callback_t* callback)*
		.method public hidebysig int32 ReadResponse(void* data_out, int32 bytes_to_read, int32* bytes_read, valuetype CefNet.CApi.cef_callback_t* callback)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_handler_t::read_response
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_resource_handler_t*, void*, int32, int32*, valuetype CefNet.CApi.cef_callback_t*)
			ret
		}

		// void (*)(_cef_resource_handler_t* self)*
		.method public hidebysig void Cancel()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_resource_handler_t::cancel
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_resource_handler_t*)
			ret
		}
	}
}

