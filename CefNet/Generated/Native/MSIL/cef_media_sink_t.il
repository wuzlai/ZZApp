// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_media_router_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_media_sink_t
	{
		// cef_string_userfree_t (*)(_cef_media_sink_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetId()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_sink_t::get_id
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_media_sink_t*)
			ret
		}

		// int (*)(_cef_media_sink_t* self)*
		.method public hidebysig int32 IsValid()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_sink_t::is_valid
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_media_sink_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_media_sink_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetName()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_sink_t::get_name
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_media_sink_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_media_sink_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetDescription()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_sink_t::get_description
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_media_sink_t*)
			ret
		}

		// cef_media_sink_icon_type_t (*)(_cef_media_sink_t* self)*
		.method public hidebysig valuetype CefNet.CefMediaSinkIconType GetIconType()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_sink_t::get_icon_type
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CefMediaSinkIconType(valuetype CefNet.CApi.cef_media_sink_t*)
			ret
		}

		// void (*)(_cef_media_sink_t* self, _cef_media_sink_device_info_callback_t* callback)*
		.method public hidebysig void GetDeviceInfo(valuetype CefNet.CApi.cef_media_sink_device_info_callback_t* callback)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_sink_t::get_device_info
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_media_sink_t*, valuetype CefNet.CApi.cef_media_sink_device_info_callback_t*)
			ret
		}

		// int (*)(_cef_media_sink_t* self)*
		.method public hidebysig int32 IsCastSink()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_sink_t::is_cast_sink
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_media_sink_t*)
			ret
		}

		// int (*)(_cef_media_sink_t* self)*
		.method public hidebysig int32 IsDialSink()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_sink_t::is_dial_sink
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_media_sink_t*)
			ret
		}

		// int (*)(_cef_media_sink_t* self, _cef_media_source_t* source)*
		.method public hidebysig int32 IsCompatibleWith(valuetype CefNet.CApi.cef_media_source_t* source)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_media_sink_t::is_compatible_with
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_media_sink_t*, valuetype CefNet.CApi.cef_media_source_t*)
			ret
		}
	}
}

