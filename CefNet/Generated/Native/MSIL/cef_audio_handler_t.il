// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_audio_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_audio_handler_t
	{
		// int (*)(_cef_audio_handler_t* self, _cef_browser_t* browser, cef_audio_parameters_t* params)*
		.method public hidebysig int32 GetAudioParameters(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_audio_parameters_t* @params)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_audio_handler_t::get_audio_parameters
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_audio_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_audio_parameters_t*)
			ret
		}

		// void (*)(_cef_audio_handler_t* self, _cef_browser_t* browser, const cef_audio_parameters_t* params, int channels)*
		.method public hidebysig void OnAudioStreamStarted(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_audio_parameters_t* @params, int32 channels)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_audio_handler_t::on_audio_stream_started
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_audio_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_audio_parameters_t*, int32)
			ret
		}

		// void (*)(_cef_audio_handler_t* self, _cef_browser_t* browser, const float** data, int frames, int64 pts)*
		.method public hidebysig void OnAudioStreamPacket(valuetype CefNet.CApi.cef_browser_t* browser, float32** data, int32 frames, int64 pts)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_audio_handler_t::on_audio_stream_packet
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_audio_handler_t*, valuetype CefNet.CApi.cef_browser_t*, float32**, int32, int64)
			ret
		}

		// void (*)(_cef_audio_handler_t* self, _cef_browser_t* browser)*
		.method public hidebysig void OnAudioStreamStopped(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_audio_handler_t::on_audio_stream_stopped
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_audio_handler_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}

		// void (*)(_cef_audio_handler_t* self, _cef_browser_t* browser, const cef_string_t* message)*
		.method public hidebysig void OnAudioStreamError(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_string_t* message)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_audio_handler_t::on_audio_stream_error
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_audio_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}
	}
}

