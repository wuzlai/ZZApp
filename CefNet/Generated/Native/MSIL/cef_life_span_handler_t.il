// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_life_span_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_life_span_handler_t
	{
		// int (*)(_cef_life_span_handler_t* self, _cef_browser_t* browser, _cef_frame_t* frame, const cef_string_t* target_url, const cef_string_t* target_frame_name, cef_window_open_disposition_t target_disposition, int user_gesture, const const _cef_popup_features_t* popupFeatures, _cef_window_info_t* windowInfo, _cef_client_t** client, _cef_browser_settings_t* settings, _cef_dictionary_value_t** extra_info, int* no_javascript_access)*
		.method public hidebysig int32 OnBeforePopup(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_frame_t* frame, valuetype CefNet.CApi.cef_string_t* target_url, valuetype CefNet.CApi.cef_string_t* target_frame_name, valuetype CefNet.CefWindowOpenDisposition target_disposition, int32 user_gesture, valuetype CefNet.CApi.cef_popup_features_t* popupFeatures, valuetype CefNet.CApi.cef_window_info_t* windowInfo, valuetype CefNet.CApi.cef_client_t** client, valuetype CefNet.CApi.cef_browser_settings_t* settings, valuetype CefNet.CApi.cef_dictionary_value_t** extra_info, int32* no_javascript_access)
		{
			.maxstack 14
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.s 5
			ldarg.s 6
			ldarg.s 7
			ldarg.s 8
			ldarg.s 9
			ldarg.s 10
			ldarg.s 11
			ldarg.s 12
			ldarg.0
			ldfld void* CefNet.CApi.cef_life_span_handler_t::on_before_popup
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_life_span_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_frame_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CefWindowOpenDisposition, int32, valuetype CefNet.CApi.cef_popup_features_t*, valuetype CefNet.CApi.cef_window_info_t*, valuetype CefNet.CApi.cef_client_t**, valuetype CefNet.CApi.cef_browser_settings_t*, valuetype CefNet.CApi.cef_dictionary_value_t**, int32*)
			ret
		}

		// void (*)(_cef_life_span_handler_t* self, _cef_browser_t* browser)*
		.method public hidebysig void OnAfterCreated(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_life_span_handler_t::on_after_created
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_life_span_handler_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}

		// int (*)(_cef_life_span_handler_t* self, _cef_browser_t* browser)*
		.method public hidebysig int32 DoClose(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_life_span_handler_t::do_close
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_life_span_handler_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}

		// void (*)(_cef_life_span_handler_t* self, _cef_browser_t* browser)*
		.method public hidebysig void OnBeforeClose(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_life_span_handler_t::on_before_close
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_life_span_handler_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}
	}
}

