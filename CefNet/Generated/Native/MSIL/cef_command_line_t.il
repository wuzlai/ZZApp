// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_command_line_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_command_line_t
	{
		// int (*)(_cef_command_line_t* self)*
		.method public hidebysig int32 IsValid()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::is_valid
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_command_line_t*)
			ret
		}

		// int (*)(_cef_command_line_t* self)*
		.method public hidebysig int32 IsReadOnly()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::is_read_only
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_command_line_t*)
			ret
		}

		// _cef_command_line_t* (*)(_cef_command_line_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_command_line_t* Copy()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::copy
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_command_line_t*(valuetype CefNet.CApi.cef_command_line_t*)
			ret
		}

		// void (*)(_cef_command_line_t* self, int argc, const const char** argv)*
		.method public hidebysig void InitFromArgv(int32 argc, uint8** argv)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::init_from_argv
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, int32, uint8**)
			ret
		}

		// void (*)(_cef_command_line_t* self, const cef_string_t* command_line)*
		.method public hidebysig void InitFromString(valuetype CefNet.CApi.cef_string_t* command_line)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::init_from_string
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_command_line_t* self)*
		.method public hidebysig void Reset()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::reset
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*)
			ret
		}

		// void (*)(_cef_command_line_t* self, cef_string_list_t argv)*
		.method public hidebysig void GetArgv(valuetype CefNet.CApi.cef_string_list_t argv)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::get_argv
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_list_t)
			ret
		}

		// cef_string_userfree_t (*)(_cef_command_line_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetCommandLineString()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::get_command_line_string
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_command_line_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_command_line_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetProgram()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::get_program
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_command_line_t*)
			ret
		}

		// void (*)(_cef_command_line_t* self, const cef_string_t* program)*
		.method public hidebysig void SetProgram(valuetype CefNet.CApi.cef_string_t* program)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::set_program
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_command_line_t* self)*
		.method public hidebysig int32 HasSwitches()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::has_switches
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_command_line_t*)
			ret
		}

		// int (*)(_cef_command_line_t* self, const cef_string_t* name)*
		.method public hidebysig int32 HasSwitch(valuetype CefNet.CApi.cef_string_t* name)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::has_switch
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_command_line_t* self, const cef_string_t* name)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetSwitchValue(valuetype CefNet.CApi.cef_string_t* name)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::get_switch_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_command_line_t* self, cef_string_map_t switches)*
		.method public hidebysig void GetSwitches(valuetype CefNet.CApi.cef_string_map_t switches)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::get_switches
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_map_t)
			ret
		}

		// void (*)(_cef_command_line_t* self, const cef_string_t* name)*
		.method public hidebysig void AppendSwitch(valuetype CefNet.CApi.cef_string_t* name)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::append_switch
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_command_line_t* self, const cef_string_t* name, const cef_string_t* value)*
		.method public hidebysig void AppendSwitchWithValue(valuetype CefNet.CApi.cef_string_t* name, valuetype CefNet.CApi.cef_string_t* 'value')
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::append_switch_with_value
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// int (*)(_cef_command_line_t* self)*
		.method public hidebysig int32 HasArguments()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::has_arguments
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_command_line_t*)
			ret
		}

		// void (*)(_cef_command_line_t* self, cef_string_list_t arguments)*
		.method public hidebysig void GetArguments(valuetype CefNet.CApi.cef_string_list_t arguments)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::get_arguments
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_list_t)
			ret
		}

		// void (*)(_cef_command_line_t* self, const cef_string_t* argument)*
		.method public hidebysig void AppendArgument(valuetype CefNet.CApi.cef_string_t* argument)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::append_argument
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_command_line_t* self, const cef_string_t* wrapper)*
		.method public hidebysig void PrependWrapper(valuetype CefNet.CApi.cef_string_t* wrapper)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_command_line_t::prepend_wrapper
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_command_line_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}
	}
}

