// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_focus_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_focus_handler_t
	{
		// void (*)(_cef_focus_handler_t* self, _cef_browser_t* browser, int next)*
		.method public hidebysig void OnTakeFocus(valuetype CefNet.CApi.cef_browser_t* browser, int32 next)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_focus_handler_t::on_take_focus
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_focus_handler_t*, valuetype CefNet.CApi.cef_browser_t*, int32)
			ret
		}

		// int (*)(_cef_focus_handler_t* self, _cef_browser_t* browser, cef_focus_source_t source)*
		.method public hidebysig int32 OnSetFocus(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CefFocusSource source)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_focus_handler_t::on_set_focus
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_focus_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CefFocusSource)
			ret
		}

		// void (*)(_cef_focus_handler_t* self, _cef_browser_t* browser)*
		.method public hidebysig void OnGotFocus(valuetype CefNet.CApi.cef_browser_t* browser)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_focus_handler_t::on_got_focus
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_focus_handler_t*, valuetype CefNet.CApi.cef_browser_t*)
			ret
		}
	}
}

