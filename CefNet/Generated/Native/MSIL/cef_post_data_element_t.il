// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_request_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_post_data_element_t
	{
		// int (*)(_cef_post_data_element_t* self)*
		.method public hidebysig int32 IsReadOnly()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_element_t::is_read_only
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_post_data_element_t*)
			ret
		}

		// void (*)(_cef_post_data_element_t* self)*
		.method public hidebysig void SetToEmpty()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_element_t::set_to_empty
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_post_data_element_t*)
			ret
		}

		// void (*)(_cef_post_data_element_t* self, const cef_string_t* fileName)*
		.method public hidebysig void SetToFile(valuetype CefNet.CApi.cef_string_t* fileName)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_element_t::set_to_file
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_post_data_element_t*, valuetype CefNet.CApi.cef_string_t*)
			ret
		}

		// void (*)(_cef_post_data_element_t* self, size_t size, const void* bytes)*
		.method public hidebysig void SetToBytes(native uint size, void* bytes)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_element_t::set_to_bytes
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				void(valuetype CefNet.CApi.cef_post_data_element_t*, native uint, void*)
			ret
		}

		// cef_postdataelement_type_t (*)(_cef_post_data_element_t* self)*
		.method public hidebysig valuetype CefNet.CefPostDataElementType GetCefType()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_element_t::get_type
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CefPostDataElementType(valuetype CefNet.CApi.cef_post_data_element_t*)
			ret
		}

		// cef_string_userfree_t (*)(_cef_post_data_element_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_string_userfree_t GetFile()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_element_t::get_file
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_string_userfree_t(valuetype CefNet.CApi.cef_post_data_element_t*)
			ret
		}

		// size_t (*)(_cef_post_data_element_t* self)*
		.method public hidebysig native uint GetBytesCount()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_element_t::get_bytes_count
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				native uint(valuetype CefNet.CApi.cef_post_data_element_t*)
			ret
		}

		// size_t (*)(_cef_post_data_element_t* self, size_t size, void* bytes)*
		.method public hidebysig native uint GetBytes(native uint size, void* bytes)
		{
			.maxstack 4
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.0
			ldfld void* CefNet.CApi.cef_post_data_element_t::get_bytes
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				native uint(valuetype CefNet.CApi.cef_post_data_element_t*, native uint, void*)
			ret
		}
	}
}

