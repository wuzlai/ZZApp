// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_values_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_binary_value_t
	{
		// int (*)(_cef_binary_value_t* self)*
		.method public hidebysig int32 IsValid()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_binary_value_t::is_valid
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_binary_value_t*)
			ret
		}

		// int (*)(_cef_binary_value_t* self)*
		.method public hidebysig int32 IsOwned()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_binary_value_t::is_owned
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_binary_value_t*)
			ret
		}

		// int (*)(_cef_binary_value_t* self, _cef_binary_value_t* that)*
		.method public hidebysig int32 IsSame(valuetype CefNet.CApi.cef_binary_value_t* that)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_binary_value_t::is_same
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_binary_value_t*, valuetype CefNet.CApi.cef_binary_value_t*)
			ret
		}

		// int (*)(_cef_binary_value_t* self, _cef_binary_value_t* that)*
		.method public hidebysig int32 IsEqual(valuetype CefNet.CApi.cef_binary_value_t* that)
		{
			.maxstack 3
			ldarg.0
			ldarg.1
			ldarg.0
			ldfld void* CefNet.CApi.cef_binary_value_t::is_equal
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_binary_value_t*, valuetype CefNet.CApi.cef_binary_value_t*)
			ret
		}

		// _cef_binary_value_t* (*)(_cef_binary_value_t* self)*
		.method public hidebysig valuetype CefNet.CApi.cef_binary_value_t* Copy()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_binary_value_t::copy
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				valuetype CefNet.CApi.cef_binary_value_t*(valuetype CefNet.CApi.cef_binary_value_t*)
			ret
		}

		// size_t (*)(_cef_binary_value_t* self)*
		.method public hidebysig native uint GetSize()
		{
			.maxstack 2
			ldarg.0
			ldarg.0
			ldfld void* CefNet.CApi.cef_binary_value_t::get_size
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				native uint(valuetype CefNet.CApi.cef_binary_value_t*)
			ret
		}

		// size_t (*)(_cef_binary_value_t* self, void* buffer, size_t buffer_size, size_t data_offset)*
		.method public hidebysig native uint GetData(void* buffer, native uint buffer_size, native uint data_offset)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_binary_value_t::get_data
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				native uint(valuetype CefNet.CApi.cef_binary_value_t*, void*, native uint, native uint)
			ret
		}
	}
}

