// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_keyboard_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------


.namespace CefNet.CApi
{
	.class public cef_keyboard_handler_t
	{
		// int (*)(_cef_keyboard_handler_t* self, _cef_browser_t* browser, const const _cef_key_event_t* event, CefEventHandle os_event, int* is_keyboard_shortcut)*
		.method public hidebysig int32 OnPreKeyEvent(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_key_event_t* @event, valuetype CefNet.CefEventHandle os_event, int32* is_keyboard_shortcut)
		{
			.maxstack 6
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.s 4
			ldarg.0
			ldfld void* CefNet.CApi.cef_keyboard_handler_t::on_pre_key_event
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_keyboard_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_key_event_t*, valuetype CefNet.CefEventHandle, int32*)
			ret
		}

		// int (*)(_cef_keyboard_handler_t* self, _cef_browser_t* browser, const const _cef_key_event_t* event, CefEventHandle os_event)*
		.method public hidebysig int32 OnKeyEvent(valuetype CefNet.CApi.cef_browser_t* browser, valuetype CefNet.CApi.cef_key_event_t* @event, valuetype CefNet.CefEventHandle os_event)
		{
			.maxstack 5
			ldarg.0
			ldarg.1
			ldarg.2
			ldarg.3
			ldarg.0
			ldfld void* CefNet.CApi.cef_keyboard_handler_t::on_key_event
			calli explicit unmanaged
#ifdef WINDOWS
				stdcall
#else
				cdecl
#endif
				int32(valuetype CefNet.CApi.cef_keyboard_handler_t*, valuetype CefNet.CApi.cef_browser_t*, valuetype CefNet.CApi.cef_key_event_t*, valuetype CefNet.CefEventHandle)
			ret
		}
	}
}

